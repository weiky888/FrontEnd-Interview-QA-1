html:
    <div class="container">
        <div  class="input-item" v-for="(val,key) in registerData"  :key="key" >
            <div :class="{'red':val.isErr === true}" >
                <label v-if='val.label'>{{val.label}}</label>
                <input
                        :type="val.type"
                        :placeholer ='val.placeholder'
                        @blur='verifyRegister(key)'
                        v-model='val.value'
                        :maxlength='val.maxlength'
                >
                <p class='red'  v-show='val.isErr' >{{ val.info }}</p>
            </div>
        </div>

        <button type="button" class="sub" @click="submitRegister">提交</button>
    </div>



js:
    export default {
        data() {
            return {
                registerData: {
                    userName: {
                        label: '用户名',
                        type: 'text',
                        placeholder: '请输入你的用户名',
                        value: ' ',
                        maxlength: '15',
                        isErr: false,
                        info: '请填写用户名'
                    },
                    identifyId: {
                        label: '身份证号',
                        type: 'text',
                        placeholder: '请输入你的身份证号码',
                        value: ' ',
                        maxlength: '18',
                        isErr: false,
                        info: '请输入正确的身份证号码'
                    },
                    firstPassword: {
                        label: '设置密码',
                        type: 'password',
                        placeholder: '请输入密码',
                        value: '',
                        maxlength: '18',
                        isErr: false,
                        info: '密码必须为6-18 位字母和数字的组合 '
                    },
                    secondPassword: {
                        label: '确认密码',
                        type: 'password',
                        placeholder: '请再次输入密码',
                        value: '',
                        maxlength: '18',
                        isErr: false,
                        info: '您输入的密码不一致，请重新输入'
                    },
                    cellphone: {
                        label: '手机号码',
                        type: 'tel',
                        placeholder: '请输入您的手机号码',
                        value: '',
                        maxlength: '11',
                        isErr: false,
                        info: '请输入正确的11位手机号码'
                    }
                },

            }
        },
        methods: {
            verifyRegister(key){
              let regIdentify = /^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,
                  regTellphone=/^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\d{8}$/;

                switch (key) {
                  case 'userName': {
                      if(this.registerData[key].value){
                          this.registerData[key].isErr = false;
                      }
                      else{
                          this.registerData[key].isErr = true;
                      }
                  }
                  break;
                  case 'identifyId': {
                      if(regIdentify.test(this.registerData[key].value)){
                          this.registerData[key].isErr = false;
                      }
                      else{
                          this.registerData[key].isErr = true;
                      }
                  }
                  break;
                  case 'cellphone': {
                        if(regTellphone.test(this.registerData[key].value)){
                            this.registerData[key].isErr = false;
                        }
                        else{
                            this.registerData[key].isErr = true;
                        }
                    }
              }

            },

            submitRegister(){
                // 提交的确认
               let isCheck = true;
               for(let key in this.registerData){
                   // 遍历每一个
                   this.verifyRegister(key)
                   if(this.register[key].isErr){
                       isCheck = false;
                   }
               }

               if(isCheck){
                 try{ //校验通过，传值
                   let params = {};
                   for(let key in this.registerData){
                      if(key =='firstPassword'){
                          params[key] = this.$MD5(this.registerData[key].value)
                      }
                      else if(key !='secondPassword'){
                          params[key] = this.registerData[key].value
                      }
                   }
                   // 保存不定参
                    await this.$http.ajax8888({
                      ...params
                   }).then(res=>{
                       // 首次注册成功 自动登录
                       if(res.resultcode =="000000"){
                           await  this.$http.ajax9999({
                               userName: this.registerData['userName'].value,
                               loginPassword: this.$MD5(this.registerData['firstPassword'].value),
                           }).then(res=>{
                               //登录成功 并存储用户信息和跳转
                           })
                       }
                    }) 
                     
                 }catch (e) {
                     console.log(e)
                 }

               }

            }

        }

    }


css:
  div.input-item{
        color: #333333;
        line-height: 40px;
    }

   div.err{ border:1px solid red;}
   div.red label{ color: red;}
   button.sub{
       color:#fff;
       background: red;
       margin-top: 30px;
       border: 0;
       padding: 10px 30px;
   }


